/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DFT 0
#define SYM 1
#define NUM 2
#define SYS 3
#define LAY 4

#define SK(KEY) &nk KEY KEY
#define STICKY_KEY_TIMEOUT 60000 // Keep sticky keys active longer

&sk {
  release-after-ms = <STICKY_KEY_TIMEOUT>;
};

&caps_word {
  continue-list = <UNDERSCORE MINUS BACKSPACE>;
};

//                         Layout
//  ╭────────────────────────╮╭────────────────────────╮
//  │ 0  | 1  | 2  | 3  | 4  ││ 21 | 20 | 19 | 18 | 17 │
//  │ 5  | 6  | 7  | 8  | 9  ││ 26 | 25 | 24 | 23 | 22 │
//  │ 10 | 11 | 12 | 13 | 14 ││ 31 | 30 | 29 | 28 | 27 │
//  ╰──────────────╮ 15 | 16 ││ 33 | 32 ╭──────────────╯
//                 ╰─────────╯╰─────────╯

/ { 

    combos {
        #include "combos.dtsi"
    };

    macros {
        #include "macros.dtsi"
    };

    behaviors {
        // Sticky key on tap, normal key on hold
        // Useful for modifier-clicking without the modifier remaining active
        /* nk: not_so_sticky_key { */
        /*     compatible = "zmk,behavior-hold-tap"; */
        /*     label = "NOT_SO_STICKY_KEY"; */
        /*     #binding-cells = <2>; */
        /*     tapping_term_ms = <200>; */
        /*     flavor = "tap-preferred"; */
        /*     bindings = <&kp>, <&sk>; */
        /* }; */

        /* skq: sticky_key_quick_release { */
        /*   compatible = "zmk,behavior-sticky-key"; */
        /*   label = "STICKY_KEY_QUICK_RELEASE"; */
        /*   #binding-cells = <1>; */
        /*   bindings = <&kp>; */
        /*   quick-release; */
        /*   release-after-ms = <STICKY_KEY_TIMEOUT>; */
        /* }; */


    };
    keymap {
        compatible = "zmk,keymap";
                
        default_layer {
            label = "DFT";
            bindings = <
//         ╭────────────────────────────────────────────────────────────╮ ╭────────────────────────────────────────────────────────────────╮
            &lt DFT Q   &lt SYM W   &lt SYS E      &kp R       &kp T        &kp Y      &kp U        &lt SYS I     &lt SYM O   &lt DFT P     
            &mt LALT A  &mt LCTL S  &mt LSHIFT D   &lt LAY F   &lt NUM G    &lt NUM H  &lt LAY J    &mt RSHIFT K  &mt RCTL L  &mt RALT ENTER
            &kp Z       &kp X       &kp C          &kp V       &kp B        &kp N      &kp M        &kp COMMA     &kp PERIOD  &kp TAB        
//         ╰─────────────────────────────────────╮                      │ │                        ╭───────────────────────────────────────╯
                                                   &kp ESCAPE  &kp LGUI     &kp SPC  &kp BACKSPACE
//                                               ╰──────────────────────╯ ╰────────────────────────╯
            >;
		};

        sym_layer {
            label = "SYM";
            bindings = <
//         ╭───────────────────────────────────────────────────────────────────────────────────╮   ╭────────────────────────────────────────────────────────────────────────────────────────────────╮
            &lt DFT AT_SIGN       &lt SYM PIPE    &lt SYS PERCENT   &kp ASTERISK  &kp TILDE          &kp GRAVE              &kp LBRC      &lt SYS RBRC     &lt SYM LESS_THAN   &lt DFT GREATER_THAN 
            &mt LALT EXCLAMATION  &mt LCTL SLASH  &mt LSHIFT EQUAL  &lt LAY PLUS  &lt NUM AMPERSAND  &lt NUM DOUBLE_QUOTES  &lt LAY LPAR  &mt RSHIFT RPAR  &mt RCTL SEMICOLON  &mt RALT COLON 
            &kp QUESTION          &kp BACKSLASH   &kp UNDERSCORE    &kp MINUS     &kp HASH           &kp SINGLE_QUOTE       &kp LBKT      &kp RBKT         &kp CARET           &kp DOLLAR 

//         ╰──────────────────────────────────────────────────────╮                            │   │                                       ╭────────────────────────────────────────────────────────╯
                                                                    &kp ESCAPE    &kp LGUI           &kp SPC                 &kp BACKSPACE
//                                                                ╰────────────────────────────╯   ╰───────────────────────────────────────╯
            >;
		};

        num_layer {
            label = "NUM";
            bindings = <
//         ╭────────────────────────────────────────────────╮ ╭────────────────────────────────────────────────────────────────╮
            &mo DFT  &mo SYM  &mo SYS  &none    &none           &kp PAGE_UP     &kp N1         &lt SYS N2  &lt SYM N3  &lt DFT
            &none    &none    &none    &mo LAY  &mo NUM         &lt NUM N0      &lt LAY N4     &kp N5      &kp N6      &none 
            &none    &none    &none    &none    &none           &kp PAGE_DOWN   &kp N7         &kp N8      &kp N9      &none           
//         ╰─────────────────────────╮                      │ │                               ╭────────────────────────────────╯
                                       &kp ESCAPE  &kp LGUI     &kp SPC         &kp BACKSPACE
//                                   ╰──────────────────────╯ ╰───────────────────────────────╯
            >;
		};
        sys_layer {
            label = "SYS";
            bindings = <
//         ╭──────────────────────────────────────────────────────────────────────────────────────────────────╮ ╭───────────────────────────────────────────────────────╮
            &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2                 &bt BT_NXT           &kp PRINTSCREEN      &kp F1      &kp F2         &kp F3  &kp F4     &kp F5
            &mt LALT F12  &mt LCTL C_NEXT  &mt LSHIFT C_BRIGHTNESS_INC  &lt LAY C_VOLUME_UP  &kp C_PLAY_PAUSE     &kp LEFT    &kp DOWN       &kp UP  &kp RIGHT  &kp F11 
            &bt BT_CLR    &kp C_PREV       &kp C_BRIGHTNESS_DEC         &kp C_VOLUME_DOWN    &kp C_MUTE           &kp F6      &kp F7         &kp F8  &kp F9     &kp F10           
//         ╰──────────────────────────────────────────────────────────╮                                       │ │                           ╭───────────────────────────╯
                                                                        &kp ESCAPE           &kp LGUI             &kp SPC     &kp BACKSPACE
//                                                                    ╰───────────────────────────────────────╯ ╰───────────────────────────╯
            >;
		};
        layout_layer {
            label = "LAY";
            bindings = <
//         ╭──────────────────────────────────────────╮ ╭──────────────────────────────────────────────╮
            &none &none &none    &none       &none        &none    &none         &none    &none  &none
            &none &none &to SYM  &to DFT     &to NUM      &to NUM  &to DFT       &to SYM  &none  &none 
            &none &none &none    &none       &none        &none    &none         &none    &none  &none           
//         ╰───────────────────╮                      │ │                        ╭─────────────────────╯
                                 &kp ESCAPE  &kp LGUI     &kp SPC  &kp BACKSPACE
//                             ╰──────────────────────╯ ╰────────────────────────╯
            >;
		};
	};
};
// Char used
// ╭ ╮╰ ╯ ─ │ 
