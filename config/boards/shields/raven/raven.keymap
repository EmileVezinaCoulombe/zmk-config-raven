/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DFT 0
#define SYS 1


#define SK(KEY) &nk KEY KEY
#define STICKY_KEY_TIMEOUT 60000 // Keep sticky keys active longer

&sk {
  release-after-ms = <STICKY_KEY_TIMEOUT>;
};

&caps_word {
  continue-list = <UNDERSCORE MINUS BACKSPACE>;
};

/ { 

    combos {
        #include "combos.dtsi"
    };

    macros {
        #include "macros.dtsi"
    };

    behaviors {
        // Sticky key on tap, normal key on hold
        // Useful for modifier-clicking without the modifier remaining active
        nk: not_so_sticky_key {
            compatible = "zmk,behavior-hold-tap";
            label = "NOT_SO_STICKY_KEY";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&sk>;
        };

        skq: sticky_key_quick_release {
          compatible = "zmk,behavior-sticky-key";
          label = "STICKY_KEY_QUICK_RELEASE";
          #binding-cells = <1>;
          bindings = <&kp>;
          quick-release;
          release-after-ms = <STICKY_KEY_TIMEOUT>;
        };


    };
    keymap {
        compatible = "zmk,keymap";
                
//                                                                      DEFAULT
//                                         ╭─────────────────────────────╮   ╭──────────────────────────────╮
//                                         │  Q  |  W  |  E  |  R  |  T  │   │  Y  |  U   |  I  |  O  |  P  │
//                                         │  A  |  S  |  D  |  F  |  G  │   │  H  |  J   |  K  |  L  |  ;  │
//                                         │  Z  |  X  |  C  |  V  |  B  │   │  N  |  M   |  ,  |  .  |  /  │
//                                         ╰─────────────────╮ LWR | SPC │   │ ENT | RSE  ╭─────────────────╯
//                                                           ╰───────────╯   ╰────────────╯

        DEFAULT_layer {
            label = "DFT";
            bindings = <
//         ╭────────────────────────────────────────────────────────────╮  ╭───────────────────────────────────────────────────────────────────────╮
            &kp Q       &kp W       &kp E           &kp R       &kp T       &kp Y       &kp U        &kp I           &kp O       &kp P     
            &mt LCTL A  &mt LALT S  &mt LSHIFT D	&kp F       &kp G       &kp H       &kp J        &mt RSHIFT K    &mt RALT L  &mt RCTL SEMICOLON  
            &kp Z       &kp X       &kp C           &kp V 		&kp B       &kp N       &kp M        &kp COMMA       &kp PERIOD  &kp SLASH           
//         ╰──────────────────────────────────────╮                                                   ╭────────────────────────────────────────────╯
                                                    &mo 1    &kp SPC        &kp ESCAPE  &kp BACKSPACE
//                                                ╰─────────────────────╯  ╰──────────────────────────╯
            >;
		};

        SYS_layer {
            label = "SYS";
            bindings = <
//         ╭────────────────────────────────────────────────────────────╮      ╭───────────────────────────────────────────────────────────────────────╮
            &kp Q       &kp W       &kp E           &kp R       &kp T           &kp Y       &kp U        &kp I           &kp O       &kp P     
            &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3  &bt BT_SEL 4   &kp H       &kp J        &mt RSHIFT K    &mt RALT L  &mt RCTL SEMICOLON  
            &kp Z       &kp X       &kp C           &kp V 		&kp B           &kp N       &kp M        &kp COMMA       &kp PERIOD  &kp SLASH           
//         ╰──────────────────────────────────────╮                                                        ╭────────────────────────────────────────────╯
                                                    &mo 0    &kp SPC            &kp ESCAPE  &kp BACKSPACE
//                                                ╰─────────────────────╯       ╰──────────────────────────╯
            >;
		};
	};
};
// Char used
// ╭ ╮╰ ╯ ─ │ 
